 Cinnamon <- Skip (GlobalStatement Skip)*   # -> concat
 SyntaxError <- (!NewLine .)* NewLine   # -> '[91m{match}[0m'
 NewLine <- '\r\n' / '\n'   # -> '\n'
 LineBreak <- _ LineEndComment? NewLine   # -> concat
 LineContinue <- '...' _ LineEndComment? NewLine   # -> concat
 WhiteSpace <- [ \t]+   # -> ' '
 Space <- (WhiteSpace / InlineComment / LineContinue)+   # -> concat
 _ <- Space?   # -> concat
 Terminal <- LineBreak / ';'   # -> ';\n'
 Skip <- _ (LineBreak _)*   # -> concat
 Comment <- LineEndComment / InlineComment   # -> concat
 LineEndComment <- '//' (!NewLine .)*   # -> match
 InlineComment <- MultiLineComment / NestableComment   # -> concat
 MultiLineComment <- '/*' (!'*/' .)* '*/'   # -> match
 NestableComment <- '(*' <(!'*)' (NestableComment / .))*> '*)'   # -> special action
 Name <- NameStart NameMid* NameEnd   # -> match
 NameStart <- [a-zA-Z_]   # (no action)
 NameMid <- [a-zA-Z_0-9]   # (no action)
 NameEnd <- !NameMid   # (no action)
 SimpleDeclaration <- DeclarationWithInit / DeclarationWithoutInit   # -> forward
 DeclarationWithInit <- Identifier _ (Identifier _)+ AssignOperator _ Expression   # -> special action
 DeclarationWithoutInit <- Identifier (_ Identifier)+   # -> special action
 Assignment <- Identifier _ AssignOperator _ Expression _ Terminal   # -> concat
 AssignOperator <- ':='   # -> '='
 Expression <- Atomic   # -> concat
 Atomic <- Identifier / Literal   # -> concat
 Literal <- [0-9]+   # -> match
 ExpressionList <- Expression (_ ',' _ Expression)*   # -> forward
Keyword <- !. .  # -> ''
Identifier <- !Keyword ( Name )  # -> concat
GlobalStatement <- SimpleDeclaration _ Terminal / Assignment / LocalStatement / SyntaxError  # -> concat
LocalStatement <- SimpleDeclaration _ Terminal / Assignment / Expression _ Terminal / SyntaxError  # -> concat
